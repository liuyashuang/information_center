<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hnu.softwarecollege.infocenter.mapper.UserInformationPoMapper">
  <resultMap id="BaseResultMap" type="com.hnu.softwarecollege.infocenter.entity.po.UserInformationPo">
    <id column="INF_ID" jdbcType="BIGINT" property="infId" />
    <result column="USER_KEY" jdbcType="BIGINT" property="userKey" />
    <result column="INF_NUM" jdbcType="INTEGER" property="infNum" />
    <result column="INF_PASS" jdbcType="VARCHAR" property="infPass" />
    <result column="INF_SIGNATURE" jdbcType="VARCHAR" property="infSignature" />
    <result column="INF_ACADEMY" jdbcType="VARCHAR" property="infAcademy" />
    <result column="INF_MAJOR" jdbcType="VARCHAR" property="infMajor" />
    <result column="INF_CLASS" jdbcType="VARCHAR" property="infClass" />
    <result column="INF_SEX" jdbcType="VARCHAR" property="infSex" />
    <result column="INF_LOCALTION" jdbcType="VARCHAR" property="infLocaltion" />
    <result column="INF_AGE" jdbcType="VARCHAR" property="infAge" />
  </resultMap>
  <sql id="Base_Column_List">
    INF_ID, USER_KEY, INF_NUM, INF_PASS, INF_SIGNATURE, INF_ACADEMY, INF_MAJOR, INF_CLASS, 
    INF_SEX, INF_LOCALTION, INF_AGE
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from tbl_user_information
    where INF_ID = #{infId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from tbl_user_information
    where INF_ID = #{infId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hnu.softwarecollege.infocenter.entity.po.UserInformationPo">
    insert into tbl_user_information (INF_ID, USER_KEY, INF_NUM, 
      INF_PASS, INF_SIGNATURE, INF_ACADEMY, 
      INF_MAJOR, INF_CLASS, INF_SEX, 
      INF_LOCALTION, INF_AGE)
    values (#{infId,jdbcType=BIGINT}, #{userKey,jdbcType=BIGINT}, #{infNum,jdbcType=INTEGER}, 
      #{infPass,jdbcType=VARCHAR}, #{infSignature,jdbcType=VARCHAR}, #{infAcademy,jdbcType=VARCHAR}, 
      #{infMajor,jdbcType=VARCHAR}, #{infClass,jdbcType=VARCHAR}, #{infSex,jdbcType=VARCHAR}, 
      #{infLocaltion,jdbcType=VARCHAR}, #{infAge,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.hnu.softwarecollege.infocenter.entity.po.UserInformationPo">
    insert into tbl_user_information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="infId != null">
        INF_ID,
      </if>
      <if test="userKey != null">
        USER_KEY,
      </if>
      <if test="infNum != null">
        INF_NUM,
      </if>
      <if test="infPass != null">
        INF_PASS,
      </if>
      <if test="infSignature != null">
        INF_SIGNATURE,
      </if>
      <if test="infAcademy != null">
        INF_ACADEMY,
      </if>
      <if test="infMajor != null">
        INF_MAJOR,
      </if>
      <if test="infClass != null">
        INF_CLASS,
      </if>
      <if test="infSex != null">
        INF_SEX,
      </if>
      <if test="infLocaltion != null">
        INF_LOCALTION,
      </if>
      <if test="infAge != null">
        INF_AGE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="infId != null">
        #{infId,jdbcType=BIGINT},
      </if>
      <if test="userKey != null">
        #{userKey,jdbcType=BIGINT},
      </if>
      <if test="infNum != null">
        #{infNum,jdbcType=INTEGER},
      </if>
      <if test="infPass != null">
        #{infPass,jdbcType=VARCHAR},
      </if>
      <if test="infSignature != null">
        #{infSignature,jdbcType=VARCHAR},
      </if>
      <if test="infAcademy != null">
        #{infAcademy,jdbcType=VARCHAR},
      </if>
      <if test="infMajor != null">
        #{infMajor,jdbcType=VARCHAR},
      </if>
      <if test="infClass != null">
        #{infClass,jdbcType=VARCHAR},
      </if>
      <if test="infSex != null">
        #{infSex,jdbcType=VARCHAR},
      </if>
      <if test="infLocaltion != null">
        #{infLocaltion,jdbcType=VARCHAR},
      </if>
      <if test="infAge != null">
        #{infAge,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hnu.softwarecollege.infocenter.entity.po.UserInformationPo">
    update tbl_user_information
    <set>
      <if test="userKey != null">
        USER_KEY = #{userKey,jdbcType=BIGINT},
      </if>
      <if test="infNum != null">
        INF_NUM = #{infNum,jdbcType=INTEGER},
      </if>
      <if test="infPass != null">
        INF_PASS = #{infPass,jdbcType=VARCHAR},
      </if>
      <if test="infSignature != null">
        INF_SIGNATURE = #{infSignature,jdbcType=VARCHAR},
      </if>
      <if test="infAcademy != null">
        INF_ACADEMY = #{infAcademy,jdbcType=VARCHAR},
      </if>
      <if test="infMajor != null">
        INF_MAJOR = #{infMajor,jdbcType=VARCHAR},
      </if>
      <if test="infClass != null">
        INF_CLASS = #{infClass,jdbcType=VARCHAR},
      </if>
      <if test="infSex != null">
        INF_SEX = #{infSex,jdbcType=VARCHAR},
      </if>
      <if test="infLocaltion != null">
        INF_LOCALTION = #{infLocaltion,jdbcType=VARCHAR},
      </if>
      <if test="infAge != null">
        INF_AGE = #{infAge,jdbcType=VARCHAR},
      </if>
    </set>
    where INF_ID = #{infId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hnu.softwarecollege.infocenter.entity.po.UserInformationPo">
    update tbl_user_information
    set USER_KEY = #{userKey,jdbcType=BIGINT},
      INF_NUM = #{infNum,jdbcType=INTEGER},
      INF_PASS = #{infPass,jdbcType=VARCHAR},
      INF_SIGNATURE = #{infSignature,jdbcType=VARCHAR},
      INF_ACADEMY = #{infAcademy,jdbcType=VARCHAR},
      INF_MAJOR = #{infMajor,jdbcType=VARCHAR},
      INF_CLASS = #{infClass,jdbcType=VARCHAR},
      INF_SEX = #{infSex,jdbcType=VARCHAR},
      INF_LOCALTION = #{infLocaltion,jdbcType=VARCHAR},
      INF_AGE = #{infAge,jdbcType=VARCHAR}
    where INF_ID = #{infId,jdbcType=BIGINT}
  </update>
</mapper>